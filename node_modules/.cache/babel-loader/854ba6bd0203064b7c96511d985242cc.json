{"ast":null,"code":"var _jsxFileName = \"/Users/Ben/Documents/dev.bensmithsound.uk/src/Site.Status.js\";\nimport React from 'react';\nimport './App.css';\nimport { prods } from './Production.list.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Status extends React.Component {\n  constructor(prop) {\n    super(prop);\n    this.state = {\n      prods\n    };\n  }\n\n  setStatus() {\n    const today = new Date();\n    var prodStatus = false;\n    prods.map(prod => {\n      var preStart = new Date(Date.parse(prod.date.preStart));\n      var fitupStart = new Date(Date.parse(prod.date.fitupStart));\n      var techStart = new Date(Date.parse(prod.date.techStart));\n      var runStart = new Date(Date.parse(prod.date.runStart));\n      var runEnd = new Date(Date.parse(prod.date.runEnd));\n\n      if (preStart <= today && fitupStart > today) {\n        prodStatus = \"in pre-production for \" + prod.showName;\n      } else if (fitupStart <= today && techStart > today) {\n        prodStatus = \"fitting up for \" + prod.showName;\n      } else if (techStart <= today && runStart > today) {\n        prodStatus = \"in tech rehearsals for \" + prod.showName;\n      } else if (runStart <= today && runEnd > today) {\n        prodStatus = \"working on performances of \" + prod.showName;\n      } else {\n        prodStatus = false;\n      }\n\n      ;\n\n      if (prodStatus) {\n        console.log(\"I am \" + prodStatus);\n      }\n\n      ;\n    });\n    return prodStatus;\n  }\n\n  render() {\n    {\n      /*this.setStatus();*/\n    }\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"I am \", this.setStatus()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Status;","map":{"version":3,"sources":["/Users/Ben/Documents/dev.bensmithsound.uk/src/Site.Status.js"],"names":["React","prods","Status","Component","constructor","prop","state","setStatus","today","Date","prodStatus","map","prod","preStart","parse","date","fitupStart","techStart","runStart","runEnd","showName","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAAQC,KAAR,QAAoB,wBAApB;;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAChB,UAAMA,IAAN;AACA,SAAKC,KAAL,GAAa;AAACL,MAAAA;AAAD,KAAb;AACD;;AAEDM,EAAAA,SAAS,GAAG;AACV,UAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAIC,UAAU,GAAC,KAAf;AACAT,IAAAA,KAAK,CAACU,GAAN,CAAUC,IAAI,IAAI;AAChB,UAAIC,QAAQ,GAAG,IAAIJ,IAAJ,CAASA,IAAI,CAACK,KAAL,CAAWF,IAAI,CAACG,IAAL,CAAUF,QAArB,CAAT,CAAf;AACA,UAAIG,UAAU,GAAG,IAAIP,IAAJ,CAASA,IAAI,CAACK,KAAL,CAAWF,IAAI,CAACG,IAAL,CAAUC,UAArB,CAAT,CAAjB;AACA,UAAIC,SAAS,GAAG,IAAIR,IAAJ,CAASA,IAAI,CAACK,KAAL,CAAWF,IAAI,CAACG,IAAL,CAAUE,SAArB,CAAT,CAAhB;AACA,UAAIC,QAAQ,GAAG,IAAIT,IAAJ,CAASA,IAAI,CAACK,KAAL,CAAWF,IAAI,CAACG,IAAL,CAAUG,QAArB,CAAT,CAAf;AACA,UAAIC,MAAM,GAAG,IAAIV,IAAJ,CAASA,IAAI,CAACK,KAAL,CAAWF,IAAI,CAACG,IAAL,CAAUI,MAArB,CAAT,CAAb;;AAEA,UAAGN,QAAQ,IAAIL,KAAZ,IAAqBQ,UAAU,GAAGR,KAArC,EAA4C;AAC1CE,QAAAA,UAAU,GAAG,2BAA2BE,IAAI,CAACQ,QAA7C;AACD,OAFD,MAEO,IAAGJ,UAAU,IAAIR,KAAd,IAAuBS,SAAS,GAAGT,KAAtC,EAA6C;AAClDE,QAAAA,UAAU,GAAG,oBAAoBE,IAAI,CAACQ,QAAtC;AACD,OAFM,MAEA,IAAGH,SAAS,IAAIT,KAAb,IAAsBU,QAAQ,GAAGV,KAApC,EAA2C;AAChDE,QAAAA,UAAU,GAAG,4BAA4BE,IAAI,CAACQ,QAA9C;AACD,OAFM,MAEA,IAAGF,QAAQ,IAAIV,KAAZ,IAAqBW,MAAM,GAAGX,KAAjC,EAAwC;AAC7CE,QAAAA,UAAU,GAAG,gCAAgCE,IAAI,CAACQ,QAAlD;AACD,OAFM,MAEA;AACLV,QAAAA,UAAU,GAAG,KAAb;AACD;;AAAA;;AAED,UAAGA,UAAH,EAAe;AAACW,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAUZ,UAAtB;AAAkC;;AAAA;AAEnD,KArBD;AAsBA,WAAOA,UAAP;AACD;;AAEDa,EAAAA,MAAM,GAAG;AACP;AAAC;AAAsB;AACvB,wBACE;AAAA,0BAAS,KAAKhB,SAAL,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAvCkC;;AA0CrC,eAAeL,MAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {prods} from './Production.list.json';\n\nclass Status extends React.Component {\n  constructor(prop) {\n    super(prop);\n    this.state = {prods};\n  }\n\n  setStatus() {\n    const today = new Date();\n    var prodStatus=false;\n    prods.map(prod => {\n      var preStart = new Date(Date.parse(prod.date.preStart));\n      var fitupStart = new Date(Date.parse(prod.date.fitupStart));\n      var techStart = new Date(Date.parse(prod.date.techStart));\n      var runStart = new Date(Date.parse(prod.date.runStart));\n      var runEnd = new Date(Date.parse(prod.date.runEnd));\n\n      if(preStart <= today && fitupStart > today) {\n        prodStatus = \"in pre-production for \" + prod.showName;\n      } else if(fitupStart <= today && techStart > today) {\n        prodStatus = \"fitting up for \" + prod.showName;\n      } else if(techStart <= today && runStart > today) {\n        prodStatus = \"in tech rehearsals for \" + prod.showName;\n      } else if(runStart <= today && runEnd > today) {\n        prodStatus = \"working on performances of \" + prod.showName;\n      } else {\n        prodStatus = false\n      };\n\n      if(prodStatus) {console.log(\"I am \" + prodStatus)};\n\n    })\n    return(prodStatus);\n  }\n\n  render() {\n    {/*this.setStatus();*/}\n    return (\n      <p>I am {this.setStatus()}</p>\n    )\n  }\n}\n\nexport default Status;"]},"metadata":{},"sourceType":"module"}